/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

goog.provide('proto.cpr.TrainningSessionUI');

goog.require('jspb.Message');
goog.require('proto.common.GPSAddress');
goog.require('proto.cpr.TrainningUI');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.cpr.TrainningSessionUI = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.cpr.TrainningSessionUI, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.cpr.TrainningSessionUI.displayName = 'proto.cpr.TrainningSessionUI';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.cpr.TrainningSessionUI.prototype.toObject = function(opt_includeInstance) {
  return proto.cpr.TrainningSessionUI.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.cpr.TrainningSessionUI} msg The msg instance to transform.
 * @return {!Object}
 */
proto.cpr.TrainningSessionUI.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    trainningId: jspb.Message.getField(msg, 2),
    startTime: jspb.Message.getField(msg, 3),
    durationMins: jspb.Message.getField(msg, 4),
    cost: jspb.Message.getField(msg, 5),
    location: (f = msg.getLocation()) && proto.common.GPSAddress.toObject(includeInstance, f),
    trainning: (f = msg.getTrainning()) && proto.cpr.TrainningUI.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg
  }
  return obj;
};
}


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.cpr.TrainningSessionUI} The clone.
 */
proto.cpr.TrainningSessionUI.prototype.cloneMessage = function() {
  return /** @type {!proto.cpr.TrainningSessionUI} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 id = 1;
 * @return {number?}
 */
proto.cpr.TrainningSessionUI.prototype.getId = function() {
  return /** @type {number?} */ (jspb.Message.getField(this, 1));
};


/** @param {number?|undefined} value  */
proto.cpr.TrainningSessionUI.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.cpr.TrainningSessionUI.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * optional int32 trainning_id = 2;
 * @return {number?}
 */
proto.cpr.TrainningSessionUI.prototype.getTrainningId = function() {
  return /** @type {number?} */ (jspb.Message.getField(this, 2));
};


/** @param {number?|undefined} value  */
proto.cpr.TrainningSessionUI.prototype.setTrainningId = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.cpr.TrainningSessionUI.prototype.clearTrainningId = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * optional int64 start_time = 3;
 * @return {number?}
 */
proto.cpr.TrainningSessionUI.prototype.getStartTime = function() {
  return /** @type {number?} */ (jspb.Message.getField(this, 3));
};


/** @param {number?|undefined} value  */
proto.cpr.TrainningSessionUI.prototype.setStartTime = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.cpr.TrainningSessionUI.prototype.clearStartTime = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * optional int32 duration_mins = 4;
 * @return {number?}
 */
proto.cpr.TrainningSessionUI.prototype.getDurationMins = function() {
  return /** @type {number?} */ (jspb.Message.getField(this, 4));
};


/** @param {number?|undefined} value  */
proto.cpr.TrainningSessionUI.prototype.setDurationMins = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.cpr.TrainningSessionUI.prototype.clearDurationMins = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * optional double cost = 5;
 * @return {number?}
 */
proto.cpr.TrainningSessionUI.prototype.getCost = function() {
  return /** @type {number?} */ (jspb.Message.getField(this, 5));
};


/** @param {number?|undefined} value  */
proto.cpr.TrainningSessionUI.prototype.setCost = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.cpr.TrainningSessionUI.prototype.clearCost = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * optional common.GPSAddress location = 6;
 * @return {proto.common.GPSAddress}
 */
proto.cpr.TrainningSessionUI.prototype.getLocation = function() {
  return /** @type{proto.common.GPSAddress} */ (
    jspb.Message.getWrapperField(this, proto.common.GPSAddress, 6));
};


/** @param {proto.common.GPSAddress|undefined} value  */
proto.cpr.TrainningSessionUI.prototype.setLocation = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.cpr.TrainningSessionUI.prototype.clearLocation = function() {
  this.setLocation(undefined);
};


/**
 * optional TrainningUI trainning = 7;
 * @return {proto.cpr.TrainningUI}
 */
proto.cpr.TrainningSessionUI.prototype.getTrainning = function() {
  return /** @type{proto.cpr.TrainningUI} */ (
    jspb.Message.getWrapperField(this, proto.cpr.TrainningUI, 7));
};


/** @param {proto.cpr.TrainningUI|undefined} value  */
proto.cpr.TrainningSessionUI.prototype.setTrainning = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.cpr.TrainningSessionUI.prototype.clearTrainning = function() {
  this.setTrainning(undefined);
};


